#load library
library(reshape2)
library(dplyr)
setwd("/fs/ess/PCON0022/guoqi/NC-snrna/Spatial")
samp_file<-list.files(".",pattern = ".csv")
setwd("/fs/project/PAS1475/Yuzhou_Chang/Fu_lab_data/Visium/raw_data/Layer_annotation")
ann_file<-list.files(".",pattern = ".csv")
samp_list<-list()
ann_list<-list()

#load file and delete noise spot
for(i in 1:6){
  setwd("/fs/ess/PCON0022/guoqi/NC-snrna/Spatial")
  samp_list[[i]]<-read.csv(samp_file[i],row.names = 1)
  setwd("/fs/project/PAS1475/Yuzhou_Chang/Fu_lab_data/Visium/raw_data/Layer_annotation")
  ann_list[[i]]<-read.csv(ann_file[i])
  print(identical(rownames(samp_list[[i]]),ann_list[[i]]$Barcode))
  noise<-which(ann_list[[i]][,2]=="Noise")
  if(length(noise)!=0){
    ann_list[[i]]<-ann_list[[i]][-noise,]
    samp_list[[i]]<-samp_list[[i]][-noise,]
  }
else{
  ann_list[[i]]<-ann_list[[i]]
  samp_list[[i]]<-samp_list[[i]]
  print(i)
}
}

#calculate proportion of each cell type
layer<-sort(unique(ann_list[[1]]$Layer.annotation))
data<-list()
data.melt<-list()
proportion<-list()
for(i in 1:6){
  print(i)
  data[[i]]<-cbind(samp_list[[i]],ann_list[[i]][,2])
  colnames(data[[i]])[8]<-c("layer")
  data[[i]]$id<-rownames(data[[i]])
  data.melt[[i]]<-melt(data[[i]],id.var=c("id","layer"))
  proportion[[i]] <- data.melt[[i]] %>%
    group_by(layer,variable) %>%
    summarize(Mean = mean(value, na.rm=TRUE))
}
names(proportion)<-c("1-1","18-64","2-3","2-5","2-8","T4857")


#cell propotion plot
#color
# my_cols <- c('CM'='#E32D32','MP'='#F69896','FB'='#35A132','EC'='#4552A0','T'='#D4D915',
#              'GN'='#20ACBD')
# my_cols3<-c('#E32D32','#F69896','#35A132','#4552A0','#D4D915','#20ACBD')
#plot
setwd("/fs/ess/PCON0022/guoqi/NC-snrna/Spatial/Deconvolution_plot")
for(i in 1:6){
  p<-ggplot(proportion[[i]],aes(layer,Mean,fill=variable))+
    
    geom_bar(stat="identity",position="fill")+
    
    ggtitle("")+
    
    theme_bw()+
    
    theme(axis.ticks.length=unit(0.5,'cm'))
  
  ggsave(
    plot = p,
    filename = paste(names(proportion)[i],"_deconvolution_barplot.tiff",sep = ""),
    device = "tiff",
    dpi = 150,
    width = 10,
    height = 10,
    units = "in"
  )
}

for(i in 1:6){
write.csv(proportion[[i]],file = paste(names(proportion)[i],"_deconvolution_proportion.csv"))
}
